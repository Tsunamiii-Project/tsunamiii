module.exports = {
	root: true,
	extends: [
		'eslint:recommended',
		'plugin:import/recommended',
		'plugin:import/typescript',
		'plugin:@typescript-eslint/recommended',
		'next',
		'prettier',
		'plugin:react/recommended',
	],
	parser: '@typescript-eslint/parser',
	plugins: [
		'@typescript-eslint',
		'prettier',
		'react',
		'react-hooks',
	],
	env: {
		es2022: true,
		node: true,
	},
	parserOptions: {
		sourceType: 'module',
	},
	ignorePatterns: ['.eslintrc.js'],
	rules: {
		indent: 'off',
		'linebreak-style': ['error', 'unix'],
		quotes: [
			'error',
			'single',
			{ avoidEscape: true, allowTemplateLiterals: true },
		],
		semi: ['error', 'never'],
		'no-console': 'error',
		'no-implicit-globals': 'error',
		'no-warning-comments': ['error', { terms: ['fixme', 'todo'] }],
		'newline-before-return': 'error',
		curly: 'error',
		'padded-blocks': ['error', 'never'],
		'space-before-blocks': 'error',
		'@typescript-eslint/no-unused-vars': 'error',
		'padding-line-between-statements': [
			'error',
			{
				blankLine: 'always',
				prev: '*',
				next: [
					'break',
					'case',
					'cjs-export',
					'class',
					'continue',
					'do',
					'if',
					'switch',
					'try',
					'while',
					'return',
				],
			},
			{
				blankLine: 'always',
				prev: [
					'break',
					'case',
					'cjs-export',
					'class',
					'continue',
					'do',
					'if',
					'switch',
					'try',
					'while',
					'return',
				],
				next: '*',
			},
		],
		'react-hooks/rules-of-hooks': 'error',
		'react-hooks/exhaustive-deps': 'warn',
		'react/no-unescaped-entities': ['error', { forbid: ['>', '}'] }],
		'react/react-in-jsx-scope': 'off',
		'react/prop-types': 'off',
		'@typescript-eslint/consistent-type-imports': [
			'error',
			{
				prefer: 'type-imports',
				disallowTypeAnnotations: true,
				fixStyle: 'separate-type-imports',
			},
		],
	},
	settings: {
		react: {
			version: 'detect',
			'import/parsers': {
				'@typescript-eslint/parser': ['.ts', '.tsx'],
			},
		},
	},
}
